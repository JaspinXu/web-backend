<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="redlib.backend.dao.LabMapper">
  <resultMap id="BaseResultMap" type="redlib.backend.model.Lab">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lab_code" jdbcType="VARCHAR" property="labCode" />
    <result column="lab_name" jdbcType="VARCHAR" property="labName" />
    <result column="student_max" jdbcType="INTEGER" property="studentMax" />
    <result column="occupy" jdbcType="TINYINT" property="occupy" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>

  <sql id="Base_Column_List">
    id, lab_code, lab_name, student_max, occupy, description, created_by, updated_by, 
    created_at, updated_at, deleted
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lab
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lab
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="redlib.backend.model.Lab">
    insert into lab (id, lab_code, lab_name, 
      student_max, occupy, description, 
      created_by, updated_by)
    values (#{id,jdbcType=INTEGER}, #{labCode,jdbcType=VARCHAR}, #{labName,jdbcType=VARCHAR}, 
      #{studentMax,jdbcType=INTEGER}, #{occupy,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="redlib.backend.model.Lab">
    insert into lab
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="labCode != null">
        lab_code,
      </if>
      <if test="labName != null">
        lab_name,
      </if>
      <if test="studentMax != null">
        student_max,
      </if>
      <if test="occupy != null">
        occupy,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="labCode != null">
        #{labCode,jdbcType=VARCHAR},
      </if>
      <if test="labName != null">
        #{labName,jdbcType=VARCHAR},
      </if>
      <if test="studentMax != null">
        #{studentMax,jdbcType=INTEGER},
      </if>
      <if test="occupy != null">
        #{occupy,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="redlib.backend.model.Lab">
    update lab
    <set>
      <if test="labCode != null">
        lab_code = #{labCode,jdbcType=VARCHAR},
      </if>
      <if test="labName != null">
        lab_name = #{labName,jdbcType=VARCHAR},
      </if>
      <if test="studentMax != null">
        student_max = #{studentMax,jdbcType=INTEGER},
      </if>
      <if test="occupy != null">
        occupy = #{occupy,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="redlib.backend.model.Lab">
    update lab
    set lab_code = #{labCode,jdbcType=VARCHAR},
      lab_name = #{labName,jdbcType=VARCHAR},
      student_max = #{studentMax,jdbcType=INTEGER},
      occupy = #{occupy,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 获取名字个数(分页) -->
  <select id="count" resultType="integer">
    select count(*)
    from lab
    <where>
      <if test="labName != null">
        lab_name like #{labName}
      </if>
    </where>
  </select>

  <!-- 获取实验室(分页) -->
  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lab
    <where>
      <if test="queryDTO.labName != null">
        lab_name like #{queryDTO.labName}
      </if>
    </where>
    limit #{offset}, #{limit}
  </select>

  <!-- 批量删除 -->
  <update id="deleteByCodes">
    delete from lab
    where id in
    <foreach item="item" index="index" collection="codeList" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <select id="selectByOccupy" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from lab
    where occupy = #{occupy,jdbcType=TINYINT}
  </select>

  <!-- 获取总个数(分页) -->
  <select id="countSum" resultType="integer">
    select count(*)
    from lab
  </select>

  <!-- 获取所有实验室 -->
  <select id="listAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lab
  </select>

  <!-- 根据实验室名称列表获取实验室信息列表 -->
  <select id="listByNames" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lab
    where lab_name in
    <foreach item="item" index="index" collection="lab_names" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>


</mapper>